// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: trip.proto

package trip

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PriceModel int32

const (
	PriceModel_PRICE_MODEL_UNSPECIFIED PriceModel = 0
	PriceModel_AUTOMATIC_FARE          PriceModel = 1 // Drivers bid, lowest fare wins after timer.
	PriceModel_FLEX_FARE               PriceModel = 2 // Rider/driver negotiate fare.
	PriceModel_INSTANT_FARE            PriceModel = 3 // First driver to accept wins, no bidding.
)

// Enum value maps for PriceModel.
var (
	PriceModel_name = map[int32]string{
		0: "PRICE_MODEL_UNSPECIFIED",
		1: "AUTOMATIC_FARE",
		2: "FLEX_FARE",
		3: "INSTANT_FARE",
	}
	PriceModel_value = map[string]int32{
		"PRICE_MODEL_UNSPECIFIED": 0,
		"AUTOMATIC_FARE":          1,
		"FLEX_FARE":               2,
		"INSTANT_FARE":            3,
	}
)

func (x PriceModel) Enum() *PriceModel {
	p := new(PriceModel)
	*p = x
	return p
}

func (x PriceModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PriceModel) Descriptor() protoreflect.EnumDescriptor {
	return file_trip_proto_enumTypes[0].Descriptor()
}

func (PriceModel) Type() protoreflect.EnumType {
	return &file_trip_proto_enumTypes[0]
}

func (x PriceModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PriceModel.Descriptor instead.
func (PriceModel) EnumDescriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{0}
}

type TripStatus int32

const (
	TripStatus_TRIP_STATUS_UNSPECIFIED TripStatus = 0
	TripStatus_REQUESTED               TripStatus = 1
	TripStatus_ASSIGNED                TripStatus = 2
	TripStatus_ARRIVING                TripStatus = 3
	TripStatus_IN_TRANSIT              TripStatus = 4
	TripStatus_ACTIVE                  TripStatus = 5
	TripStatus_COMPLETED               TripStatus = 6
	TripStatus_CANCELLED               TripStatus = 7
	TripStatus_FAILED                  TripStatus = 8
	TripStatus_LOCKED                  TripStatus = 9 // For Flex Fare or Bidding: locked after acceptance/winner.
)

// Enum value maps for TripStatus.
var (
	TripStatus_name = map[int32]string{
		0: "TRIP_STATUS_UNSPECIFIED",
		1: "REQUESTED",
		2: "ASSIGNED",
		3: "ARRIVING",
		4: "IN_TRANSIT",
		5: "ACTIVE",
		6: "COMPLETED",
		7: "CANCELLED",
		8: "FAILED",
		9: "LOCKED",
	}
	TripStatus_value = map[string]int32{
		"TRIP_STATUS_UNSPECIFIED": 0,
		"REQUESTED":               1,
		"ASSIGNED":                2,
		"ARRIVING":                3,
		"IN_TRANSIT":              4,
		"ACTIVE":                  5,
		"COMPLETED":               6,
		"CANCELLED":               7,
		"FAILED":                  8,
		"LOCKED":                  9,
	}
)

func (x TripStatus) Enum() *TripStatus {
	p := new(TripStatus)
	*p = x
	return p
}

func (x TripStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TripStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trip_proto_enumTypes[1].Descriptor()
}

func (TripStatus) Type() protoreflect.EnumType {
	return &file_trip_proto_enumTypes[1]
}

func (x TripStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TripStatus.Descriptor instead.
func (TripStatus) EnumDescriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{1}
}

type PaymentStatus int32

const (
	PaymentStatus_PAYMENT_UNSPECIFIED PaymentStatus = 0
	PaymentStatus_PAYMENT_PENDING     PaymentStatus = 1
	PaymentStatus_PAYMENT_PAID        PaymentStatus = 2
	PaymentStatus_PAYMENT_FAILED      PaymentStatus = 3
	PaymentStatus_PAYMENT_REFUNDED    PaymentStatus = 4
)

// Enum value maps for PaymentStatus.
var (
	PaymentStatus_name = map[int32]string{
		0: "PAYMENT_UNSPECIFIED",
		1: "PAYMENT_PENDING",
		2: "PAYMENT_PAID",
		3: "PAYMENT_FAILED",
		4: "PAYMENT_REFUNDED",
	}
	PaymentStatus_value = map[string]int32{
		"PAYMENT_UNSPECIFIED": 0,
		"PAYMENT_PENDING":     1,
		"PAYMENT_PAID":        2,
		"PAYMENT_FAILED":      3,
		"PAYMENT_REFUNDED":    4,
	}
)

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trip_proto_enumTypes[2].Descriptor()
}

func (PaymentStatus) Type() protoreflect.EnumType {
	return &file_trip_proto_enumTypes[2]
}

func (x PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatus.Descriptor instead.
func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{2}
}

type NegotiationStatus int32

const (
	NegotiationStatus_NEGOTIATION_STATUS_UNSPECIFIED NegotiationStatus = 0
	NegotiationStatus_NEGOTIATION_STATUS_OFFERED     NegotiationStatus = 1
	NegotiationStatus_NEGOTIATION_STATUS_COUNTERED   NegotiationStatus = 2
	NegotiationStatus_NEGOTIATION_STATUS_PENDING     NegotiationStatus = 3
	NegotiationStatus_NEGOTIATION_STATUS_ACCEPTED    NegotiationStatus = 4
	NegotiationStatus_NEGOTIATION_STATUS_REJECTED    NegotiationStatus = 5
)

// Enum value maps for NegotiationStatus.
var (
	NegotiationStatus_name = map[int32]string{
		0: "NEGOTIATION_STATUS_UNSPECIFIED",
		1: "NEGOTIATION_STATUS_OFFERED",
		2: "NEGOTIATION_STATUS_COUNTERED",
		3: "NEGOTIATION_STATUS_PENDING",
		4: "NEGOTIATION_STATUS_ACCEPTED",
		5: "NEGOTIATION_STATUS_REJECTED",
	}
	NegotiationStatus_value = map[string]int32{
		"NEGOTIATION_STATUS_UNSPECIFIED": 0,
		"NEGOTIATION_STATUS_OFFERED":     1,
		"NEGOTIATION_STATUS_COUNTERED":   2,
		"NEGOTIATION_STATUS_PENDING":     3,
		"NEGOTIATION_STATUS_ACCEPTED":    4,
		"NEGOTIATION_STATUS_REJECTED":    5,
	}
)

func (x NegotiationStatus) Enum() *NegotiationStatus {
	p := new(NegotiationStatus)
	*p = x
	return p
}

func (x NegotiationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NegotiationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trip_proto_enumTypes[3].Descriptor()
}

func (NegotiationStatus) Type() protoreflect.EnumType {
	return &file_trip_proto_enumTypes[3]
}

func (x NegotiationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NegotiationStatus.Descriptor instead.
func (NegotiationStatus) EnumDescriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{3}
}

type Trip struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TripId                 string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	RiderId                string                 `protobuf:"bytes,2,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	DriverId               *string                `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3,oneof" json:"driver_id,omitempty"`
	PriceModel             PriceModel             `protobuf:"varint,4,opt,name=price_model,json=priceModel,proto3,enum=trip.PriceModel" json:"price_model,omitempty"`
	Status                 TripStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=trip.TripStatus" json:"status,omitempty"`
	PaymentStatus          PaymentStatus          `protobuf:"varint,6,opt,name=payment_status,json=paymentStatus,proto3,enum=trip.PaymentStatus" json:"payment_status,omitempty"`
	Fare                   float64                `protobuf:"fixed64,7,opt,name=fare,proto3" json:"fare,omitempty"`
	StartLocationLatitude  float64                `protobuf:"fixed64,8,opt,name=start_location_latitude,json=startLocationLatitude,proto3" json:"start_location_latitude,omitempty"`
	StartLocationLongitude float64                `protobuf:"fixed64,9,opt,name=start_location_longitude,json=startLocationLongitude,proto3" json:"start_location_longitude,omitempty"`
	EndLocationLatitude    float64                `protobuf:"fixed64,10,opt,name=end_location_latitude,json=endLocationLatitude,proto3" json:"end_location_latitude,omitempty"`
	EndLocationLongitude   float64                `protobuf:"fixed64,11,opt,name=end_location_longitude,json=endLocationLongitude,proto3" json:"end_location_longitude,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Trip) Reset() {
	*x = Trip{}
	mi := &file_trip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{0}
}

func (x *Trip) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *Trip) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *Trip) GetDriverId() string {
	if x != nil && x.DriverId != nil {
		return *x.DriverId
	}
	return ""
}

func (x *Trip) GetPriceModel() PriceModel {
	if x != nil {
		return x.PriceModel
	}
	return PriceModel_PRICE_MODEL_UNSPECIFIED
}

func (x *Trip) GetStatus() TripStatus {
	if x != nil {
		return x.Status
	}
	return TripStatus_TRIP_STATUS_UNSPECIFIED
}

func (x *Trip) GetPaymentStatus() PaymentStatus {
	if x != nil {
		return x.PaymentStatus
	}
	return PaymentStatus_PAYMENT_UNSPECIFIED
}

func (x *Trip) GetFare() float64 {
	if x != nil {
		return x.Fare
	}
	return 0
}

func (x *Trip) GetStartLocationLatitude() float64 {
	if x != nil {
		return x.StartLocationLatitude
	}
	return 0
}

func (x *Trip) GetStartLocationLongitude() float64 {
	if x != nil {
		return x.StartLocationLongitude
	}
	return 0
}

func (x *Trip) GetEndLocationLatitude() float64 {
	if x != nil {
		return x.EndLocationLatitude
	}
	return 0
}

func (x *Trip) GetEndLocationLongitude() float64 {
	if x != nil {
		return x.EndLocationLongitude
	}
	return 0
}

type TripRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	RiderId                string                 `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	PriceModel             PriceModel             `protobuf:"varint,2,opt,name=price_model,json=priceModel,proto3,enum=trip.PriceModel" json:"price_model,omitempty"`
	StartLocationLatitude  float64                `protobuf:"fixed64,3,opt,name=start_location_latitude,json=startLocationLatitude,proto3" json:"start_location_latitude,omitempty"`
	StartLocationLongitude float64                `protobuf:"fixed64,4,opt,name=start_location_longitude,json=startLocationLongitude,proto3" json:"start_location_longitude,omitempty"`
	EndLocationLatitude    float64                `protobuf:"fixed64,5,opt,name=end_location_latitude,json=endLocationLatitude,proto3" json:"end_location_latitude,omitempty"`
	EndLocationLongitude   float64                `protobuf:"fixed64,6,opt,name=end_location_longitude,json=endLocationLongitude,proto3" json:"end_location_longitude,omitempty"`
	Status                 TripStatus             `protobuf:"varint,7,opt,name=status,proto3,enum=trip.TripStatus" json:"status,omitempty"`
	PaymentStatus          PaymentStatus          `protobuf:"varint,8,opt,name=payment_status,json=paymentStatus,proto3,enum=trip.PaymentStatus" json:"payment_status,omitempty"`
	// Flex Fare: optional initial fare offer from rider
	InitialFareOffer float64 `protobuf:"fixed64,9,opt,name=initial_fare_offer,json=initialFareOffer,proto3" json:"initial_fare_offer,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TripRequest) Reset() {
	*x = TripRequest{}
	mi := &file_trip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripRequest) ProtoMessage() {}

func (x *TripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripRequest.ProtoReflect.Descriptor instead.
func (*TripRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{1}
}

func (x *TripRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *TripRequest) GetPriceModel() PriceModel {
	if x != nil {
		return x.PriceModel
	}
	return PriceModel_PRICE_MODEL_UNSPECIFIED
}

func (x *TripRequest) GetStartLocationLatitude() float64 {
	if x != nil {
		return x.StartLocationLatitude
	}
	return 0
}

func (x *TripRequest) GetStartLocationLongitude() float64 {
	if x != nil {
		return x.StartLocationLongitude
	}
	return 0
}

func (x *TripRequest) GetEndLocationLatitude() float64 {
	if x != nil {
		return x.EndLocationLatitude
	}
	return 0
}

func (x *TripRequest) GetEndLocationLongitude() float64 {
	if x != nil {
		return x.EndLocationLongitude
	}
	return 0
}

func (x *TripRequest) GetStatus() TripStatus {
	if x != nil {
		return x.Status
	}
	return TripStatus_TRIP_STATUS_UNSPECIFIED
}

func (x *TripRequest) GetPaymentStatus() PaymentStatus {
	if x != nil {
		return x.PaymentStatus
	}
	return PaymentStatus_PAYMENT_UNSPECIFIED
}

func (x *TripRequest) GetInitialFareOffer() float64 {
	if x != nil {
		return x.InitialFareOffer
	}
	return 0
}

type TripResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Trip          *Trip                  `protobuf:"bytes,2,opt,name=trip,proto3" json:"trip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TripResponse) Reset() {
	*x = TripResponse{}
	mi := &file_trip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripResponse) ProtoMessage() {}

func (x *TripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripResponse.ProtoReflect.Descriptor instead.
func (*TripResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{2}
}

func (x *TripResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TripResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type BidOrOfferRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	TripId       string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	UserId       string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // driver or rider
	PriceModel   PriceModel             `protobuf:"varint,3,opt,name=price_model,json=priceModel,proto3,enum=trip.PriceModel" json:"price_model,omitempty"`
	ProposedFare float64                `protobuf:"fixed64,4,opt,name=proposed_fare,json=proposedFare,proto3" json:"proposed_fare,omitempty"`
	// "DRIVER" or "RIDER" (for Flex Fare negotiation)
	Role string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	// Automatic Bidding: future proxy bidding support
	MaxBidLimit   float64 `protobuf:"fixed64,6,opt,name=max_bid_limit,json=maxBidLimit,proto3" json:"max_bid_limit,omitempty"` // optional
	MinBidLimit   float64 `protobuf:"fixed64,7,opt,name=min_bid_limit,json=minBidLimit,proto3" json:"min_bid_limit,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BidOrOfferRequest) Reset() {
	*x = BidOrOfferRequest{}
	mi := &file_trip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BidOrOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidOrOfferRequest) ProtoMessage() {}

func (x *BidOrOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidOrOfferRequest.ProtoReflect.Descriptor instead.
func (*BidOrOfferRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{3}
}

func (x *BidOrOfferRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *BidOrOfferRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BidOrOfferRequest) GetPriceModel() PriceModel {
	if x != nil {
		return x.PriceModel
	}
	return PriceModel_PRICE_MODEL_UNSPECIFIED
}

func (x *BidOrOfferRequest) GetProposedFare() float64 {
	if x != nil {
		return x.ProposedFare
	}
	return 0
}

func (x *BidOrOfferRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *BidOrOfferRequest) GetMaxBidLimit() float64 {
	if x != nil {
		return x.MaxBidLimit
	}
	return 0
}

func (x *BidOrOfferRequest) GetMinBidLimit() float64 {
	if x != nil {
		return x.MinBidLimit
	}
	return 0
}

type BidOrOfferResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	UserId      string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PriceModel  PriceModel             `protobuf:"varint,2,opt,name=price_model,json=priceModel,proto3,enum=trip.PriceModel" json:"price_model,omitempty"`
	CurrentFare float64                `protobuf:"fixed64,3,opt,name=current_fare,json=currentFare,proto3" json:"current_fare,omitempty"`
	Message     string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Automatic Bidding
	SecondsLeft int32 `protobuf:"varint,5,opt,name=seconds_left,json=secondsLeft,proto3" json:"seconds_left,omitempty"`   // countdown timer
	IsLowestBid bool  `protobuf:"varint,6,opt,name=is_lowest_bid,json=isLowestBid,proto3" json:"is_lowest_bid,omitempty"` // is this the lowest bid?
	IsProxyBid  bool  `protobuf:"varint,7,opt,name=is_proxy_bid,json=isProxyBid,proto3" json:"is_proxy_bid,omitempty"`    // was proxy bidding used?
	// Flex Fare
	NegotiationStatus NegotiationStatus `protobuf:"varint,8,opt,name=negotiation_status,json=negotiationStatus,proto3,enum=trip.NegotiationStatus" json:"negotiation_status,omitempty"`
	Trip              *Trip             `protobuf:"bytes,9,opt,name=trip,proto3" json:"trip,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BidOrOfferResponse) Reset() {
	*x = BidOrOfferResponse{}
	mi := &file_trip_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BidOrOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidOrOfferResponse) ProtoMessage() {}

func (x *BidOrOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidOrOfferResponse.ProtoReflect.Descriptor instead.
func (*BidOrOfferResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{4}
}

func (x *BidOrOfferResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BidOrOfferResponse) GetPriceModel() PriceModel {
	if x != nil {
		return x.PriceModel
	}
	return PriceModel_PRICE_MODEL_UNSPECIFIED
}

func (x *BidOrOfferResponse) GetCurrentFare() float64 {
	if x != nil {
		return x.CurrentFare
	}
	return 0
}

func (x *BidOrOfferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BidOrOfferResponse) GetSecondsLeft() int32 {
	if x != nil {
		return x.SecondsLeft
	}
	return 0
}

func (x *BidOrOfferResponse) GetIsLowestBid() bool {
	if x != nil {
		return x.IsLowestBid
	}
	return false
}

func (x *BidOrOfferResponse) GetIsProxyBid() bool {
	if x != nil {
		return x.IsProxyBid
	}
	return false
}

func (x *BidOrOfferResponse) GetNegotiationStatus() NegotiationStatus {
	if x != nil {
		return x.NegotiationStatus
	}
	return NegotiationStatus_NEGOTIATION_STATUS_UNSPECIFIED
}

func (x *BidOrOfferResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type AcceptOfferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // driver or rider accepting the offer
	PriceModel    PriceModel             `protobuf:"varint,3,opt,name=price_model,json=priceModel,proto3,enum=trip.PriceModel" json:"price_model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptOfferRequest) Reset() {
	*x = AcceptOfferRequest{}
	mi := &file_trip_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOfferRequest) ProtoMessage() {}

func (x *AcceptOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOfferRequest.ProtoReflect.Descriptor instead.
func (*AcceptOfferRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptOfferRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *AcceptOfferRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AcceptOfferRequest) GetPriceModel() PriceModel {
	if x != nil {
		return x.PriceModel
	}
	return PriceModel_PRICE_MODEL_UNSPECIFIED
}

type AcceptOfferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AcceptedFare  float64                `protobuf:"fixed64,2,opt,name=accepted_fare,json=acceptedFare,proto3" json:"accepted_fare,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Trip          *Trip                  `protobuf:"bytes,4,opt,name=trip,proto3" json:"trip,omitempty"` // status should be LOCKED
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptOfferResponse) Reset() {
	*x = AcceptOfferResponse{}
	mi := &file_trip_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOfferResponse) ProtoMessage() {}

func (x *AcceptOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOfferResponse.ProtoReflect.Descriptor instead.
func (*AcceptOfferResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{6}
}

func (x *AcceptOfferResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AcceptOfferResponse) GetAcceptedFare() float64 {
	if x != nil {
		return x.AcceptedFare
	}
	return 0
}

func (x *AcceptOfferResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AcceptOfferResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type InstantAcceptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstantAcceptRequest) Reset() {
	*x = InstantAcceptRequest{}
	mi := &file_trip_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstantAcceptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantAcceptRequest) ProtoMessage() {}

func (x *InstantAcceptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantAcceptRequest.ProtoReflect.Descriptor instead.
func (*InstantAcceptRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{7}
}

func (x *InstantAcceptRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *InstantAcceptRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type InstantAcceptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	AcceptedFare  float64                `protobuf:"fixed64,2,opt,name=accepted_fare,json=acceptedFare,proto3" json:"accepted_fare,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	IsWinner      bool                   `protobuf:"varint,4,opt,name=is_winner,json=isWinner,proto3" json:"is_winner,omitempty"`                   // true if this driver won
	Accepted      bool                   `protobuf:"varint,5,opt,name=accepted,proto3" json:"accepted,omitempty"`                                   // true if the request was accepted
	DriversAhead  *int32                 `protobuf:"varint,6,opt,name=drivers_ahead,json=driversAhead,proto3,oneof" json:"drivers_ahead,omitempty"` // optional, number of drivers before this one
	Trip          *Trip                  `protobuf:"bytes,7,opt,name=trip,proto3" json:"trip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstantAcceptResponse) Reset() {
	*x = InstantAcceptResponse{}
	mi := &file_trip_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstantAcceptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantAcceptResponse) ProtoMessage() {}

func (x *InstantAcceptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantAcceptResponse.ProtoReflect.Descriptor instead.
func (*InstantAcceptResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{8}
}

func (x *InstantAcceptResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *InstantAcceptResponse) GetAcceptedFare() float64 {
	if x != nil {
		return x.AcceptedFare
	}
	return 0
}

func (x *InstantAcceptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstantAcceptResponse) GetIsWinner() bool {
	if x != nil {
		return x.IsWinner
	}
	return false
}

func (x *InstantAcceptResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *InstantAcceptResponse) GetDriversAhead() int32 {
	if x != nil && x.DriversAhead != nil {
		return *x.DriversAhead
	}
	return 0
}

func (x *InstantAcceptResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type GetTripRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTripRequest) Reset() {
	*x = GetTripRequest{}
	mi := &file_trip_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripRequest) ProtoMessage() {}

func (x *GetTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripRequest.ProtoReflect.Descriptor instead.
func (*GetTripRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{9}
}

func (x *GetTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type GetActiveTripsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveTripsRequest) Reset() {
	*x = GetActiveTripsRequest{}
	mi := &file_trip_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveTripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTripsRequest) ProtoMessage() {}

func (x *GetActiveTripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTripsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTripsRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{10}
}

func (x *GetActiveTripsRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type GetActiveTripsByRiderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RiderId       string                 `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveTripsByRiderRequest) Reset() {
	*x = GetActiveTripsByRiderRequest{}
	mi := &file_trip_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveTripsByRiderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTripsByRiderRequest) ProtoMessage() {}

func (x *GetActiveTripsByRiderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTripsByRiderRequest.ProtoReflect.Descriptor instead.
func (*GetActiveTripsByRiderRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{11}
}

func (x *GetActiveTripsByRiderRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

type GetActiveTripsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trips         []*Trip                `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveTripsResponse) Reset() {
	*x = GetActiveTripsResponse{}
	mi := &file_trip_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveTripsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveTripsResponse) ProtoMessage() {}

func (x *GetActiveTripsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveTripsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveTripsResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{12}
}

func (x *GetActiveTripsResponse) GetTrips() []*Trip {
	if x != nil {
		return x.Trips
	}
	return nil
}

func (x *GetActiveTripsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AcceptTripRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptTripRequest) Reset() {
	*x = AcceptTripRequest{}
	mi := &file_trip_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTripRequest) ProtoMessage() {}

func (x *AcceptTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTripRequest.ProtoReflect.Descriptor instead.
func (*AcceptTripRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{13}
}

func (x *AcceptTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *AcceptTripRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type AcceptTripResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Trip          *Trip                  `protobuf:"bytes,3,opt,name=trip,proto3" json:"trip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptTripResponse) Reset() {
	*x = AcceptTripResponse{}
	mi := &file_trip_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTripResponse) ProtoMessage() {}

func (x *AcceptTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTripResponse.ProtoReflect.Descriptor instead.
func (*AcceptTripResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{14}
}

func (x *AcceptTripResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *AcceptTripResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AcceptTripResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type CancelTripRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // driver_id or rider_id
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`               // optional cancellation reason
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTripRequest) Reset() {
	*x = CancelTripRequest{}
	mi := &file_trip_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTripRequest) ProtoMessage() {}

func (x *CancelTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTripRequest.ProtoReflect.Descriptor instead.
func (*CancelTripRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{15}
}

func (x *CancelTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *CancelTripRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CancelTripRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelTripResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Trip          *Trip                  `protobuf:"bytes,3,opt,name=trip,proto3" json:"trip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTripResponse) Reset() {
	*x = CancelTripResponse{}
	mi := &file_trip_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTripResponse) ProtoMessage() {}

func (x *CancelTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTripResponse.ProtoReflect.Descriptor instead.
func (*CancelTripResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{16}
}

func (x *CancelTripResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CancelTripResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelTripResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type CompleteTripRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	FinalFare     float64                `protobuf:"fixed64,3,opt,name=final_fare,json=finalFare,proto3" json:"final_fare,omitempty"` // actual fare charged
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteTripRequest) Reset() {
	*x = CompleteTripRequest{}
	mi := &file_trip_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTripRequest) ProtoMessage() {}

func (x *CompleteTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTripRequest.ProtoReflect.Descriptor instead.
func (*CompleteTripRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{17}
}

func (x *CompleteTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *CompleteTripRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *CompleteTripRequest) GetFinalFare() float64 {
	if x != nil {
		return x.FinalFare
	}
	return 0
}

type CompleteTripResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	FinalFare     float64                `protobuf:"fixed64,2,opt,name=final_fare,json=finalFare,proto3" json:"final_fare,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Trip          *Trip                  `protobuf:"bytes,4,opt,name=trip,proto3" json:"trip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteTripResponse) Reset() {
	*x = CompleteTripResponse{}
	mi := &file_trip_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTripResponse) ProtoMessage() {}

func (x *CompleteTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTripResponse.ProtoReflect.Descriptor instead.
func (*CompleteTripResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{18}
}

func (x *CompleteTripResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *CompleteTripResponse) GetFinalFare() float64 {
	if x != nil {
		return x.FinalFare
	}
	return 0
}

func (x *CompleteTripResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CompleteTripResponse) GetTrip() *Trip {
	if x != nil {
		return x.Trip
	}
	return nil
}

type BiddingSession struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SessionId        string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TripId           string                 `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	RiderId          string                 `protobuf:"bytes,3,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	Status           string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // "active", "expired", "assigned", "cancelled"
	CurrentLowestBid float64                `protobuf:"fixed64,5,opt,name=current_lowest_bid,json=currentLowestBid,proto3" json:"current_lowest_bid,omitempty"`
	SecondsRemaining int32                  `protobuf:"varint,6,opt,name=seconds_remaining,json=secondsRemaining,proto3" json:"seconds_remaining,omitempty"`
	BidCount         int32                  `protobuf:"varint,7,opt,name=bid_count,json=bidCount,proto3" json:"bid_count,omitempty"`
	AssignedDriverId *string                `protobuf:"bytes,8,opt,name=assigned_driver_id,json=assignedDriverId,proto3,oneof" json:"assigned_driver_id,omitempty"`
	FinalFare        *float64               `protobuf:"fixed64,9,opt,name=final_fare,json=finalFare,proto3,oneof" json:"final_fare,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BiddingSession) Reset() {
	*x = BiddingSession{}
	mi := &file_trip_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BiddingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiddingSession) ProtoMessage() {}

func (x *BiddingSession) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiddingSession.ProtoReflect.Descriptor instead.
func (*BiddingSession) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{19}
}

func (x *BiddingSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *BiddingSession) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *BiddingSession) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *BiddingSession) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BiddingSession) GetCurrentLowestBid() float64 {
	if x != nil {
		return x.CurrentLowestBid
	}
	return 0
}

func (x *BiddingSession) GetSecondsRemaining() int32 {
	if x != nil {
		return x.SecondsRemaining
	}
	return 0
}

func (x *BiddingSession) GetBidCount() int32 {
	if x != nil {
		return x.BidCount
	}
	return 0
}

func (x *BiddingSession) GetAssignedDriverId() string {
	if x != nil && x.AssignedDriverId != nil {
		return *x.AssignedDriverId
	}
	return ""
}

func (x *BiddingSession) GetFinalFare() float64 {
	if x != nil && x.FinalFare != nil {
		return *x.FinalFare
	}
	return 0
}

func (x *BiddingSession) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetBiddingSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBiddingSessionRequest) Reset() {
	*x = GetBiddingSessionRequest{}
	mi := &file_trip_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBiddingSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiddingSessionRequest) ProtoMessage() {}

func (x *GetBiddingSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiddingSessionRequest.ProtoReflect.Descriptor instead.
func (*GetBiddingSessionRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{20}
}

func (x *GetBiddingSessionRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type GetBiddingSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *BiddingSession        `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBiddingSessionResponse) Reset() {
	*x = GetBiddingSessionResponse{}
	mi := &file_trip_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBiddingSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiddingSessionResponse) ProtoMessage() {}

func (x *GetBiddingSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiddingSessionResponse.ProtoReflect.Descriptor instead.
func (*GetBiddingSessionResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{21}
}

func (x *GetBiddingSessionResponse) GetSession() *BiddingSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetBiddingSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBiddingSessionsByRiderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RiderId       string                 `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBiddingSessionsByRiderRequest) Reset() {
	*x = GetBiddingSessionsByRiderRequest{}
	mi := &file_trip_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBiddingSessionsByRiderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiddingSessionsByRiderRequest) ProtoMessage() {}

func (x *GetBiddingSessionsByRiderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiddingSessionsByRiderRequest.ProtoReflect.Descriptor instead.
func (*GetBiddingSessionsByRiderRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{22}
}

func (x *GetBiddingSessionsByRiderRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

type GetBiddingSessionsByRiderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*BiddingSession      `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBiddingSessionsByRiderResponse) Reset() {
	*x = GetBiddingSessionsByRiderResponse{}
	mi := &file_trip_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBiddingSessionsByRiderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiddingSessionsByRiderResponse) ProtoMessage() {}

func (x *GetBiddingSessionsByRiderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiddingSessionsByRiderResponse.ProtoReflect.Descriptor instead.
func (*GetBiddingSessionsByRiderResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{23}
}

func (x *GetBiddingSessionsByRiderResponse) GetSessions() []*BiddingSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *GetBiddingSessionsByRiderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBiddingSessionsByDriverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBiddingSessionsByDriverRequest) Reset() {
	*x = GetBiddingSessionsByDriverRequest{}
	mi := &file_trip_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBiddingSessionsByDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiddingSessionsByDriverRequest) ProtoMessage() {}

func (x *GetBiddingSessionsByDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiddingSessionsByDriverRequest.ProtoReflect.Descriptor instead.
func (*GetBiddingSessionsByDriverRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{24}
}

func (x *GetBiddingSessionsByDriverRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type GetBiddingSessionsByDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*BiddingSession      `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBiddingSessionsByDriverResponse) Reset() {
	*x = GetBiddingSessionsByDriverResponse{}
	mi := &file_trip_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBiddingSessionsByDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBiddingSessionsByDriverResponse) ProtoMessage() {}

func (x *GetBiddingSessionsByDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBiddingSessionsByDriverResponse.ProtoReflect.Descriptor instead.
func (*GetBiddingSessionsByDriverResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{25}
}

func (x *GetBiddingSessionsByDriverResponse) GetSessions() []*BiddingSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *GetBiddingSessionsByDriverResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InstantMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstantMatchRequest) Reset() {
	*x = InstantMatchRequest{}
	mi := &file_trip_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstantMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantMatchRequest) ProtoMessage() {}

func (x *InstantMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantMatchRequest.ProtoReflect.Descriptor instead.
func (*InstantMatchRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{26}
}

func (x *InstantMatchRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *InstantMatchRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type InstantMatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	EstimatedTime int32                  `protobuf:"varint,5,opt,name=estimated_time,json=estimatedTime,proto3" json:"estimated_time,omitempty"`
	Distance      float64                `protobuf:"fixed64,6,opt,name=distance,proto3" json:"distance,omitempty"`
	Price         float64                `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstantMatchResponse) Reset() {
	*x = InstantMatchResponse{}
	mi := &file_trip_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstantMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantMatchResponse) ProtoMessage() {}

func (x *InstantMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantMatchResponse.ProtoReflect.Descriptor instead.
func (*InstantMatchResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{27}
}

func (x *InstantMatchResponse) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *InstantMatchResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *InstantMatchResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InstantMatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstantMatchResponse) GetEstimatedTime() int32 {
	if x != nil {
		return x.EstimatedTime
	}
	return 0
}

func (x *InstantMatchResponse) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *InstantMatchResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetInstantMatchStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	RiderId       string                 `protobuf:"bytes,2,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInstantMatchStatusRequest) Reset() {
	*x = GetInstantMatchStatusRequest{}
	mi := &file_trip_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstantMatchStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstantMatchStatusRequest) ProtoMessage() {}

func (x *GetInstantMatchStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstantMatchStatusRequest.ProtoReflect.Descriptor instead.
func (*GetInstantMatchStatusRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{28}
}

func (x *GetInstantMatchStatusRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *GetInstantMatchStatusRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

type GetInstantMatchStatusResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TripId           string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	Status           string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	DriversNotified  int32                  `protobuf:"varint,3,opt,name=drivers_notified,json=driversNotified,proto3" json:"drivers_notified,omitempty"`
	SecondsRemaining int32                  `protobuf:"varint,4,opt,name=seconds_remaining,json=secondsRemaining,proto3" json:"seconds_remaining,omitempty"`
	AssignedDriverId string                 `protobuf:"bytes,5,opt,name=assigned_driver_id,json=assignedDriverId,proto3" json:"assigned_driver_id,omitempty"`
	DriverInfo       *DriverInfo            `protobuf:"bytes,6,opt,name=driver_info,json=driverInfo,proto3" json:"driver_info,omitempty"`
	Message          string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetInstantMatchStatusResponse) Reset() {
	*x = GetInstantMatchStatusResponse{}
	mi := &file_trip_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInstantMatchStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstantMatchStatusResponse) ProtoMessage() {}

func (x *GetInstantMatchStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstantMatchStatusResponse.ProtoReflect.Descriptor instead.
func (*GetInstantMatchStatusResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{29}
}

func (x *GetInstantMatchStatusResponse) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *GetInstantMatchStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetInstantMatchStatusResponse) GetDriversNotified() int32 {
	if x != nil {
		return x.DriversNotified
	}
	return 0
}

func (x *GetInstantMatchStatusResponse) GetSecondsRemaining() int32 {
	if x != nil {
		return x.SecondsRemaining
	}
	return 0
}

func (x *GetInstantMatchStatusResponse) GetAssignedDriverId() string {
	if x != nil {
		return x.AssignedDriverId
	}
	return ""
}

func (x *GetInstantMatchStatusResponse) GetDriverInfo() *DriverInfo {
	if x != nil {
		return x.DriverInfo
	}
	return nil
}

func (x *GetInstantMatchStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CancelInstantMatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TripId        string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	RiderId       string                 `protobuf:"bytes,2,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelInstantMatchRequest) Reset() {
	*x = CancelInstantMatchRequest{}
	mi := &file_trip_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelInstantMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelInstantMatchRequest) ProtoMessage() {}

func (x *CancelInstantMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelInstantMatchRequest.ProtoReflect.Descriptor instead.
func (*CancelInstantMatchRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{30}
}

func (x *CancelInstantMatchRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *CancelInstantMatchRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

type CancelInstantMatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cancelled     bool                   `protobuf:"varint,1,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelInstantMatchResponse) Reset() {
	*x = CancelInstantMatchResponse{}
	mi := &file_trip_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelInstantMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelInstantMatchResponse) ProtoMessage() {}

func (x *CancelInstantMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelInstantMatchResponse.ProtoReflect.Descriptor instead.
func (*CancelInstantMatchResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{31}
}

func (x *CancelInstantMatchResponse) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *CancelInstantMatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DriverInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Rating        float64                `protobuf:"fixed64,4,opt,name=rating,proto3" json:"rating,omitempty"`
	VehicleType   string                 `protobuf:"bytes,5,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	VehicleInfo   string                 `protobuf:"bytes,6,opt,name=vehicle_info,json=vehicleInfo,proto3" json:"vehicle_info,omitempty"`
	Eta           int32                  `protobuf:"varint,7,opt,name=eta,proto3" json:"eta,omitempty"`
	Distance      float64                `protobuf:"fixed64,8,opt,name=distance,proto3" json:"distance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverInfo) Reset() {
	*x = DriverInfo{}
	mi := &file_trip_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverInfo) ProtoMessage() {}

func (x *DriverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverInfo.ProtoReflect.Descriptor instead.
func (*DriverInfo) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{32}
}

func (x *DriverInfo) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *DriverInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DriverInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DriverInfo) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *DriverInfo) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *DriverInfo) GetVehicleInfo() string {
	if x != nil {
		return x.VehicleInfo
	}
	return ""
}

func (x *DriverInfo) GetEta() int32 {
	if x != nil {
		return x.Eta
	}
	return 0
}

func (x *DriverInfo) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type NegotiationSession struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SessionId          string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TripId             string                 `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	RiderId            string                 `protobuf:"bytes,3,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	Status             string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // "active", "completed", "timeout", "cancelled"
	StartLocation      []byte                 `protobuf:"bytes,5,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation        []byte                 `protobuf:"bytes,6,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	RiderOffer         *float64               `protobuf:"fixed64,7,opt,name=rider_offer,json=riderOffer,proto3,oneof" json:"rider_offer,omitempty"`
	AllowOffers        bool                   `protobuf:"varint,8,opt,name=allow_offers,json=allowOffers,proto3" json:"allow_offers,omitempty"`
	CurrentOffers      []*Offer               `protobuf:"bytes,9,rep,name=current_offers,json=currentOffers,proto3" json:"current_offers,omitempty"`
	NegotiationHistory []*NegotiationRound    `protobuf:"bytes,10,rep,name=negotiation_history,json=negotiationHistory,proto3" json:"negotiation_history,omitempty"`
	AssignedDriverId   *string                `protobuf:"bytes,11,opt,name=assigned_driver_id,json=assignedDriverId,proto3,oneof" json:"assigned_driver_id,omitempty"`
	FinalFare          *float64               `protobuf:"fixed64,12,opt,name=final_fare,json=finalFare,proto3,oneof" json:"final_fare,omitempty"`
	SecondsRemaining   int32                  `protobuf:"varint,13,opt,name=seconds_remaining,json=secondsRemaining,proto3" json:"seconds_remaining,omitempty"`
	Metadata           map[string]string      `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt          int64                  `protobuf:"varint,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          int64                  `protobuf:"varint,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NegotiationSession) Reset() {
	*x = NegotiationSession{}
	mi := &file_trip_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NegotiationSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiationSession) ProtoMessage() {}

func (x *NegotiationSession) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiationSession.ProtoReflect.Descriptor instead.
func (*NegotiationSession) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{33}
}

func (x *NegotiationSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *NegotiationSession) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *NegotiationSession) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *NegotiationSession) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NegotiationSession) GetStartLocation() []byte {
	if x != nil {
		return x.StartLocation
	}
	return nil
}

func (x *NegotiationSession) GetEndLocation() []byte {
	if x != nil {
		return x.EndLocation
	}
	return nil
}

func (x *NegotiationSession) GetRiderOffer() float64 {
	if x != nil && x.RiderOffer != nil {
		return *x.RiderOffer
	}
	return 0
}

func (x *NegotiationSession) GetAllowOffers() bool {
	if x != nil {
		return x.AllowOffers
	}
	return false
}

func (x *NegotiationSession) GetCurrentOffers() []*Offer {
	if x != nil {
		return x.CurrentOffers
	}
	return nil
}

func (x *NegotiationSession) GetNegotiationHistory() []*NegotiationRound {
	if x != nil {
		return x.NegotiationHistory
	}
	return nil
}

func (x *NegotiationSession) GetAssignedDriverId() string {
	if x != nil && x.AssignedDriverId != nil {
		return *x.AssignedDriverId
	}
	return ""
}

func (x *NegotiationSession) GetFinalFare() float64 {
	if x != nil && x.FinalFare != nil {
		return *x.FinalFare
	}
	return 0
}

func (x *NegotiationSession) GetSecondsRemaining() int32 {
	if x != nil {
		return x.SecondsRemaining
	}
	return 0
}

func (x *NegotiationSession) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *NegotiationSession) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *NegotiationSession) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Offer struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OfferId         string                 `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	DriverId        string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	DriverName      string                 `protobuf:"bytes,3,opt,name=driver_name,json=driverName,proto3" json:"driver_name,omitempty"`
	DriverRating    float64                `protobuf:"fixed64,4,opt,name=driver_rating,json=driverRating,proto3" json:"driver_rating,omitempty"`
	Amount          float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Status          string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"` // "pending", "accepted", "declined", "countered", "expired"
	Message         string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	SubmittedAt     int64                  `protobuf:"varint,8,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	ExpiresAt       int64                  `protobuf:"varint,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	IsCounterOffer  bool                   `protobuf:"varint,10,opt,name=is_counter_offer,json=isCounterOffer,proto3" json:"is_counter_offer,omitempty"`
	OriginalOfferId *string                `protobuf:"bytes,11,opt,name=original_offer_id,json=originalOfferId,proto3,oneof" json:"original_offer_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Offer) Reset() {
	*x = Offer{}
	mi := &file_trip_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{34}
}

func (x *Offer) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *Offer) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Offer) GetDriverName() string {
	if x != nil {
		return x.DriverName
	}
	return ""
}

func (x *Offer) GetDriverRating() float64 {
	if x != nil {
		return x.DriverRating
	}
	return 0
}

func (x *Offer) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Offer) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Offer) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Offer) GetSubmittedAt() int64 {
	if x != nil {
		return x.SubmittedAt
	}
	return 0
}

func (x *Offer) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *Offer) GetIsCounterOffer() bool {
	if x != nil {
		return x.IsCounterOffer
	}
	return false
}

func (x *Offer) GetOriginalOfferId() string {
	if x != nil && x.OriginalOfferId != nil {
		return *x.OriginalOfferId
	}
	return ""
}

type NegotiationRound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoundId       string                 `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	OfferId       string                 `protobuf:"bytes,2,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	CounterId     *string                `protobuf:"bytes,3,opt,name=counter_id,json=counterId,proto3,oneof" json:"counter_id,omitempty"`
	FromUserId    string                 `protobuf:"bytes,4,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      string                 `protobuf:"bytes,5,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	Action        string                 `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"` // "offer", "counter", "accept", "decline"
	Amount        float64                `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Message       string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NegotiationRound) Reset() {
	*x = NegotiationRound{}
	mi := &file_trip_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NegotiationRound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NegotiationRound) ProtoMessage() {}

func (x *NegotiationRound) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NegotiationRound.ProtoReflect.Descriptor instead.
func (*NegotiationRound) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{35}
}

func (x *NegotiationRound) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *NegotiationRound) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *NegotiationRound) GetCounterId() string {
	if x != nil && x.CounterId != nil {
		return *x.CounterId
	}
	return ""
}

func (x *NegotiationRound) GetFromUserId() string {
	if x != nil {
		return x.FromUserId
	}
	return ""
}

func (x *NegotiationRound) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *NegotiationRound) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *NegotiationRound) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *NegotiationRound) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NegotiationRound) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type CreateNegotiationSessionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TripId         string                 `protobuf:"bytes,1,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
	RiderId        string                 `protobuf:"bytes,2,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	StartLocation  []byte                 `protobuf:"bytes,3,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation    []byte                 `protobuf:"bytes,4,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	RiderOffer     *float64               `protobuf:"fixed64,5,opt,name=rider_offer,json=riderOffer,proto3,oneof" json:"rider_offer,omitempty"`
	AllowOffers    bool                   `protobuf:"varint,6,opt,name=allow_offers,json=allowOffers,proto3" json:"allow_offers,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,7,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateNegotiationSessionRequest) Reset() {
	*x = CreateNegotiationSessionRequest{}
	mi := &file_trip_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNegotiationSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNegotiationSessionRequest) ProtoMessage() {}

func (x *CreateNegotiationSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNegotiationSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateNegotiationSessionRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{36}
}

func (x *CreateNegotiationSessionRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *CreateNegotiationSessionRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *CreateNegotiationSessionRequest) GetStartLocation() []byte {
	if x != nil {
		return x.StartLocation
	}
	return nil
}

func (x *CreateNegotiationSessionRequest) GetEndLocation() []byte {
	if x != nil {
		return x.EndLocation
	}
	return nil
}

func (x *CreateNegotiationSessionRequest) GetRiderOffer() float64 {
	if x != nil && x.RiderOffer != nil {
		return *x.RiderOffer
	}
	return 0
}

func (x *CreateNegotiationSessionRequest) GetAllowOffers() bool {
	if x != nil {
		return x.AllowOffers
	}
	return false
}

func (x *CreateNegotiationSessionRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *CreateNegotiationSessionRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateNegotiationSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Session       *NegotiationSession    `protobuf:"bytes,2,opt,name=session,proto3,oneof" json:"session,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNegotiationSessionResponse) Reset() {
	*x = CreateNegotiationSessionResponse{}
	mi := &file_trip_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNegotiationSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNegotiationSessionResponse) ProtoMessage() {}

func (x *CreateNegotiationSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNegotiationSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateNegotiationSessionResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{37}
}

func (x *CreateNegotiationSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateNegotiationSessionResponse) GetSession() *NegotiationSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *CreateNegotiationSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SubmitOfferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitOfferRequest) Reset() {
	*x = SubmitOfferRequest{}
	mi := &file_trip_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOfferRequest) ProtoMessage() {}

func (x *SubmitOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOfferRequest.ProtoReflect.Descriptor instead.
func (*SubmitOfferRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{38}
}

func (x *SubmitOfferRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SubmitOfferRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *SubmitOfferRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SubmitOfferRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SubmitOfferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitOfferResponse) Reset() {
	*x = SubmitOfferResponse{}
	mi := &file_trip_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOfferResponse) ProtoMessage() {}

func (x *SubmitOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOfferResponse.ProtoReflect.Descriptor instead.
func (*SubmitOfferResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{39}
}

func (x *SubmitOfferResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitOfferResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RespondToOfferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	OfferId       string                 `protobuf:"bytes,2,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"` // "accept", "decline", "counter"
	CounterAmount *float64               `protobuf:"fixed64,4,opt,name=counter_amount,json=counterAmount,proto3,oneof" json:"counter_amount,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondToOfferRequest) Reset() {
	*x = RespondToOfferRequest{}
	mi := &file_trip_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondToOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondToOfferRequest) ProtoMessage() {}

func (x *RespondToOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondToOfferRequest.ProtoReflect.Descriptor instead.
func (*RespondToOfferRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{40}
}

func (x *RespondToOfferRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RespondToOfferRequest) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *RespondToOfferRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RespondToOfferRequest) GetCounterAmount() float64 {
	if x != nil && x.CounterAmount != nil {
		return *x.CounterAmount
	}
	return 0
}

func (x *RespondToOfferRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RespondToOfferResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondToOfferResponse) Reset() {
	*x = RespondToOfferResponse{}
	mi := &file_trip_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondToOfferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondToOfferResponse) ProtoMessage() {}

func (x *RespondToOfferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondToOfferResponse.ProtoReflect.Descriptor instead.
func (*RespondToOfferResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{41}
}

func (x *RespondToOfferResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RespondToOfferResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DriverRespondToCounterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CounterId     string                 `protobuf:"bytes,2,opt,name=counter_id,json=counterId,proto3" json:"counter_id,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"` // "accept", "decline", "counter"
	CounterAmount *float64               `protobuf:"fixed64,4,opt,name=counter_amount,json=counterAmount,proto3,oneof" json:"counter_amount,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverRespondToCounterRequest) Reset() {
	*x = DriverRespondToCounterRequest{}
	mi := &file_trip_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRespondToCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRespondToCounterRequest) ProtoMessage() {}

func (x *DriverRespondToCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRespondToCounterRequest.ProtoReflect.Descriptor instead.
func (*DriverRespondToCounterRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{42}
}

func (x *DriverRespondToCounterRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *DriverRespondToCounterRequest) GetCounterId() string {
	if x != nil {
		return x.CounterId
	}
	return ""
}

func (x *DriverRespondToCounterRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DriverRespondToCounterRequest) GetCounterAmount() float64 {
	if x != nil && x.CounterAmount != nil {
		return *x.CounterAmount
	}
	return 0
}

func (x *DriverRespondToCounterRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DriverRespondToCounterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DriverRespondToCounterResponse) Reset() {
	*x = DriverRespondToCounterResponse{}
	mi := &file_trip_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRespondToCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRespondToCounterResponse) ProtoMessage() {}

func (x *DriverRespondToCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRespondToCounterResponse.ProtoReflect.Descriptor instead.
func (*DriverRespondToCounterResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{43}
}

func (x *DriverRespondToCounterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DriverRespondToCounterResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetNegotiationSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNegotiationSessionRequest) Reset() {
	*x = GetNegotiationSessionRequest{}
	mi := &file_trip_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNegotiationSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNegotiationSessionRequest) ProtoMessage() {}

func (x *GetNegotiationSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNegotiationSessionRequest.ProtoReflect.Descriptor instead.
func (*GetNegotiationSessionRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{44}
}

func (x *GetNegotiationSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetNegotiationSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Session       *NegotiationSession    `protobuf:"bytes,2,opt,name=session,proto3,oneof" json:"session,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNegotiationSessionResponse) Reset() {
	*x = GetNegotiationSessionResponse{}
	mi := &file_trip_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNegotiationSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNegotiationSessionResponse) ProtoMessage() {}

func (x *GetNegotiationSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNegotiationSessionResponse.ProtoReflect.Descriptor instead.
func (*GetNegotiationSessionResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{45}
}

func (x *GetNegotiationSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetNegotiationSessionResponse) GetSession() *NegotiationSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetNegotiationSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CancelNegotiationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelNegotiationRequest) Reset() {
	*x = CancelNegotiationRequest{}
	mi := &file_trip_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelNegotiationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelNegotiationRequest) ProtoMessage() {}

func (x *CancelNegotiationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelNegotiationRequest.ProtoReflect.Descriptor instead.
func (*CancelNegotiationRequest) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{46}
}

func (x *CancelNegotiationRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CancelNegotiationRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelNegotiationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelNegotiationResponse) Reset() {
	*x = CancelNegotiationResponse{}
	mi := &file_trip_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelNegotiationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelNegotiationResponse) ProtoMessage() {}

func (x *CancelNegotiationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trip_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelNegotiationResponse.ProtoReflect.Descriptor instead.
func (*CancelNegotiationResponse) Descriptor() ([]byte, []int) {
	return file_trip_proto_rawDescGZIP(), []int{47}
}

func (x *CancelNegotiationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelNegotiationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_trip_proto protoreflect.FileDescriptor

const file_trip_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"trip.proto\x12\x04trip\"\xf3\x03\n" +
	"\x04Trip\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x19\n" +
	"\brider_id\x18\x02 \x01(\tR\ariderId\x12 \n" +
	"\tdriver_id\x18\x03 \x01(\tH\x00R\bdriverId\x88\x01\x01\x121\n" +
	"\vprice_model\x18\x04 \x01(\x0e2\x10.trip.PriceModelR\n" +
	"priceModel\x12(\n" +
	"\x06status\x18\x05 \x01(\x0e2\x10.trip.TripStatusR\x06status\x12:\n" +
	"\x0epayment_status\x18\x06 \x01(\x0e2\x13.trip.PaymentStatusR\rpaymentStatus\x12\x12\n" +
	"\x04fare\x18\a \x01(\x01R\x04fare\x126\n" +
	"\x17start_location_latitude\x18\b \x01(\x01R\x15startLocationLatitude\x128\n" +
	"\x18start_location_longitude\x18\t \x01(\x01R\x16startLocationLongitude\x122\n" +
	"\x15end_location_latitude\x18\n" +
	" \x01(\x01R\x13endLocationLatitude\x124\n" +
	"\x16end_location_longitude\x18\v \x01(\x01R\x14endLocationLongitudeB\f\n" +
	"\n" +
	"_driver_id\"\xcb\x03\n" +
	"\vTripRequest\x12\x19\n" +
	"\brider_id\x18\x01 \x01(\tR\ariderId\x121\n" +
	"\vprice_model\x18\x02 \x01(\x0e2\x10.trip.PriceModelR\n" +
	"priceModel\x126\n" +
	"\x17start_location_latitude\x18\x03 \x01(\x01R\x15startLocationLatitude\x128\n" +
	"\x18start_location_longitude\x18\x04 \x01(\x01R\x16startLocationLongitude\x122\n" +
	"\x15end_location_latitude\x18\x05 \x01(\x01R\x13endLocationLatitude\x124\n" +
	"\x16end_location_longitude\x18\x06 \x01(\x01R\x14endLocationLongitude\x12(\n" +
	"\x06status\x18\a \x01(\x0e2\x10.trip.TripStatusR\x06status\x12:\n" +
	"\x0epayment_status\x18\b \x01(\x0e2\x13.trip.PaymentStatusR\rpaymentStatus\x12,\n" +
	"\x12initial_fare_offer\x18\t \x01(\x01R\x10initialFareOffer\"H\n" +
	"\fTripResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1e\n" +
	"\x04trip\x18\x02 \x01(\v2\n" +
	".trip.TripR\x04trip\"\xf9\x01\n" +
	"\x11BidOrOfferRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x121\n" +
	"\vprice_model\x18\x03 \x01(\x0e2\x10.trip.PriceModelR\n" +
	"priceModel\x12#\n" +
	"\rproposed_fare\x18\x04 \x01(\x01R\fproposedFare\x12\x12\n" +
	"\x04role\x18\x05 \x01(\tR\x04role\x12\"\n" +
	"\rmax_bid_limit\x18\x06 \x01(\x01R\vmaxBidLimit\x12\"\n" +
	"\rmin_bid_limit\x18\a \x01(\x01R\vminBidLimit\"\xee\x02\n" +
	"\x12BidOrOfferResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x121\n" +
	"\vprice_model\x18\x02 \x01(\x0e2\x10.trip.PriceModelR\n" +
	"priceModel\x12!\n" +
	"\fcurrent_fare\x18\x03 \x01(\x01R\vcurrentFare\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12!\n" +
	"\fseconds_left\x18\x05 \x01(\x05R\vsecondsLeft\x12\"\n" +
	"\ris_lowest_bid\x18\x06 \x01(\bR\visLowestBid\x12 \n" +
	"\fis_proxy_bid\x18\a \x01(\bR\n" +
	"isProxyBid\x12F\n" +
	"\x12negotiation_status\x18\b \x01(\x0e2\x17.trip.NegotiationStatusR\x11negotiationStatus\x12\x1e\n" +
	"\x04trip\x18\t \x01(\v2\n" +
	".trip.TripR\x04trip\"y\n" +
	"\x12AcceptOfferRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x121\n" +
	"\vprice_model\x18\x03 \x01(\x0e2\x10.trip.PriceModelR\n" +
	"priceModel\"\x8d\x01\n" +
	"\x13AcceptOfferResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12#\n" +
	"\raccepted_fare\x18\x02 \x01(\x01R\facceptedFare\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1e\n" +
	"\x04trip\x18\x04 \x01(\v2\n" +
	".trip.TripR\x04trip\"L\n" +
	"\x14InstantAcceptRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\"\x88\x02\n" +
	"\x15InstantAcceptResponse\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12#\n" +
	"\raccepted_fare\x18\x02 \x01(\x01R\facceptedFare\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1b\n" +
	"\tis_winner\x18\x04 \x01(\bR\bisWinner\x12\x1a\n" +
	"\baccepted\x18\x05 \x01(\bR\baccepted\x12(\n" +
	"\rdrivers_ahead\x18\x06 \x01(\x05H\x00R\fdriversAhead\x88\x01\x01\x12\x1e\n" +
	"\x04trip\x18\a \x01(\v2\n" +
	".trip.TripR\x04tripB\x10\n" +
	"\x0e_drivers_ahead\")\n" +
	"\x0eGetTripRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\"4\n" +
	"\x15GetActiveTripsRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\"9\n" +
	"\x1cGetActiveTripsByRiderRequest\x12\x19\n" +
	"\brider_id\x18\x01 \x01(\tR\ariderId\"T\n" +
	"\x16GetActiveTripsResponse\x12 \n" +
	"\x05trips\x18\x01 \x03(\v2\n" +
	".trip.TripR\x05trips\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"I\n" +
	"\x11AcceptTripRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\"k\n" +
	"\x12AcceptTripResponse\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1e\n" +
	"\x04trip\x18\x03 \x01(\v2\n" +
	".trip.TripR\x04trip\"]\n" +
	"\x11CancelTripRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"g\n" +
	"\x12CancelTripResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1e\n" +
	"\x04trip\x18\x03 \x01(\v2\n" +
	".trip.TripR\x04trip\"j\n" +
	"\x13CompleteTripRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\x12\x1d\n" +
	"\n" +
	"final_fare\x18\x03 \x01(\x01R\tfinalFare\"\x8c\x01\n" +
	"\x14CompleteTripResponse\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1d\n" +
	"\n" +
	"final_fare\x18\x02 \x01(\x01R\tfinalFare\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1e\n" +
	"\x04trip\x18\x04 \x01(\v2\n" +
	".trip.TripR\x04trip\"\x8f\x03\n" +
	"\x0eBiddingSession\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\atrip_id\x18\x02 \x01(\tR\x06tripId\x12\x19\n" +
	"\brider_id\x18\x03 \x01(\tR\ariderId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12,\n" +
	"\x12current_lowest_bid\x18\x05 \x01(\x01R\x10currentLowestBid\x12+\n" +
	"\x11seconds_remaining\x18\x06 \x01(\x05R\x10secondsRemaining\x12\x1b\n" +
	"\tbid_count\x18\a \x01(\x05R\bbidCount\x121\n" +
	"\x12assigned_driver_id\x18\b \x01(\tH\x00R\x10assignedDriverId\x88\x01\x01\x12\"\n" +
	"\n" +
	"final_fare\x18\t \x01(\x01H\x01R\tfinalFare\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\tR\tcreatedAtB\x15\n" +
	"\x13_assigned_driver_idB\r\n" +
	"\v_final_fare\"3\n" +
	"\x18GetBiddingSessionRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\"e\n" +
	"\x19GetBiddingSessionResponse\x12.\n" +
	"\asession\x18\x01 \x01(\v2\x14.trip.BiddingSessionR\asession\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"=\n" +
	" GetBiddingSessionsByRiderRequest\x12\x19\n" +
	"\brider_id\x18\x01 \x01(\tR\ariderId\"o\n" +
	"!GetBiddingSessionsByRiderResponse\x120\n" +
	"\bsessions\x18\x01 \x03(\v2\x14.trip.BiddingSessionR\bsessions\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"@\n" +
	"!GetBiddingSessionsByDriverRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\"p\n" +
	"\"GetBiddingSessionsByDriverResponse\x120\n" +
	"\bsessions\x18\x01 \x03(\v2\x14.trip.BiddingSessionR\bsessions\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"K\n" +
	"\x13InstantMatchRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\"\xd7\x01\n" +
	"\x14InstantMatchResponse\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12%\n" +
	"\x0eestimated_time\x18\x05 \x01(\x05R\restimatedTime\x12\x1a\n" +
	"\bdistance\x18\x06 \x01(\x01R\bdistance\x12\x14\n" +
	"\x05price\x18\a \x01(\x01R\x05price\"R\n" +
	"\x1cGetInstantMatchStatusRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x19\n" +
	"\brider_id\x18\x02 \x01(\tR\ariderId\"\xa3\x02\n" +
	"\x1dGetInstantMatchStatusResponse\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12)\n" +
	"\x10drivers_notified\x18\x03 \x01(\x05R\x0fdriversNotified\x12+\n" +
	"\x11seconds_remaining\x18\x04 \x01(\x05R\x10secondsRemaining\x12,\n" +
	"\x12assigned_driver_id\x18\x05 \x01(\tR\x10assignedDriverId\x121\n" +
	"\vdriver_info\x18\x06 \x01(\v2\x10.trip.DriverInfoR\n" +
	"driverInfo\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\"O\n" +
	"\x19CancelInstantMatchRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x19\n" +
	"\brider_id\x18\x02 \x01(\tR\ariderId\"T\n" +
	"\x1aCancelInstantMatchResponse\x12\x1c\n" +
	"\tcancelled\x18\x01 \x01(\bR\tcancelled\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xdf\x01\n" +
	"\n" +
	"DriverInfo\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05phone\x18\x03 \x01(\tR\x05phone\x12\x16\n" +
	"\x06rating\x18\x04 \x01(\x01R\x06rating\x12!\n" +
	"\fvehicle_type\x18\x05 \x01(\tR\vvehicleType\x12!\n" +
	"\fvehicle_info\x18\x06 \x01(\tR\vvehicleInfo\x12\x10\n" +
	"\x03eta\x18\a \x01(\x05R\x03eta\x12\x1a\n" +
	"\bdistance\x18\b \x01(\x01R\bdistance\"\x88\x06\n" +
	"\x12NegotiationSession\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\atrip_id\x18\x02 \x01(\tR\x06tripId\x12\x19\n" +
	"\brider_id\x18\x03 \x01(\tR\ariderId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12%\n" +
	"\x0estart_location\x18\x05 \x01(\fR\rstartLocation\x12!\n" +
	"\fend_location\x18\x06 \x01(\fR\vendLocation\x12$\n" +
	"\vrider_offer\x18\a \x01(\x01H\x00R\n" +
	"riderOffer\x88\x01\x01\x12!\n" +
	"\fallow_offers\x18\b \x01(\bR\vallowOffers\x122\n" +
	"\x0ecurrent_offers\x18\t \x03(\v2\v.trip.OfferR\rcurrentOffers\x12G\n" +
	"\x13negotiation_history\x18\n" +
	" \x03(\v2\x16.trip.NegotiationRoundR\x12negotiationHistory\x121\n" +
	"\x12assigned_driver_id\x18\v \x01(\tH\x01R\x10assignedDriverId\x88\x01\x01\x12\"\n" +
	"\n" +
	"final_fare\x18\f \x01(\x01H\x02R\tfinalFare\x88\x01\x01\x12+\n" +
	"\x11seconds_remaining\x18\r \x01(\x05R\x10secondsRemaining\x12B\n" +
	"\bmetadata\x18\x0e \x03(\v2&.trip.NegotiationSession.MetadataEntryR\bmetadata\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0f \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\x03R\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_rider_offerB\x15\n" +
	"\x13_assigned_driver_idB\r\n" +
	"\v_final_fare\"\x82\x03\n" +
	"\x05Offer\x12\x19\n" +
	"\boffer_id\x18\x01 \x01(\tR\aofferId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\x12\x1f\n" +
	"\vdriver_name\x18\x03 \x01(\tR\n" +
	"driverName\x12#\n" +
	"\rdriver_rating\x18\x04 \x01(\x01R\fdriverRating\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x01R\x06amount\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\x12!\n" +
	"\fsubmitted_at\x18\b \x01(\x03R\vsubmittedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\t \x01(\x03R\texpiresAt\x12(\n" +
	"\x10is_counter_offer\x18\n" +
	" \x01(\bR\x0eisCounterOffer\x12/\n" +
	"\x11original_offer_id\x18\v \x01(\tH\x00R\x0foriginalOfferId\x88\x01\x01B\x14\n" +
	"\x12_original_offer_id\"\xa3\x02\n" +
	"\x10NegotiationRound\x12\x19\n" +
	"\bround_id\x18\x01 \x01(\tR\aroundId\x12\x19\n" +
	"\boffer_id\x18\x02 \x01(\tR\aofferId\x12\"\n" +
	"\n" +
	"counter_id\x18\x03 \x01(\tH\x00R\tcounterId\x88\x01\x01\x12 \n" +
	"\ffrom_user_id\x18\x04 \x01(\tR\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x05 \x01(\tR\btoUserId\x12\x16\n" +
	"\x06action\x18\x06 \x01(\tR\x06action\x12\x16\n" +
	"\x06amount\x18\a \x01(\x01R\x06amount\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\x03R\ttimestampB\r\n" +
	"\v_counter_id\"\xaf\x03\n" +
	"\x1fCreateNegotiationSessionRequest\x12\x17\n" +
	"\atrip_id\x18\x01 \x01(\tR\x06tripId\x12\x19\n" +
	"\brider_id\x18\x02 \x01(\tR\ariderId\x12%\n" +
	"\x0estart_location\x18\x03 \x01(\fR\rstartLocation\x12!\n" +
	"\fend_location\x18\x04 \x01(\fR\vendLocation\x12$\n" +
	"\vrider_offer\x18\x05 \x01(\x01H\x00R\n" +
	"riderOffer\x88\x01\x01\x12!\n" +
	"\fallow_offers\x18\x06 \x01(\bR\vallowOffers\x12'\n" +
	"\x0ftimeout_seconds\x18\a \x01(\x05R\x0etimeoutSeconds\x12O\n" +
	"\bmetadata\x18\b \x03(\v23.trip.CreateNegotiationSessionRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\f_rider_offer\"\x97\x01\n" +
	" CreateNegotiationSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x127\n" +
	"\asession\x18\x02 \x01(\v2\x18.trip.NegotiationSessionH\x00R\asession\x88\x01\x01\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05errorB\n" +
	"\n" +
	"\b_session\"\x82\x01\n" +
	"\x12SubmitOfferRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"E\n" +
	"\x13SubmitOfferResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xc2\x01\n" +
	"\x15RespondToOfferRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\boffer_id\x18\x02 \x01(\tR\aofferId\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12*\n" +
	"\x0ecounter_amount\x18\x04 \x01(\x01H\x00R\rcounterAmount\x88\x01\x01\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessageB\x11\n" +
	"\x0f_counter_amount\"H\n" +
	"\x16RespondToOfferResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xce\x01\n" +
	"\x1dDriverRespondToCounterRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"counter_id\x18\x02 \x01(\tR\tcounterId\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12*\n" +
	"\x0ecounter_amount\x18\x04 \x01(\x01H\x00R\rcounterAmount\x88\x01\x01\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessageB\x11\n" +
	"\x0f_counter_amount\"P\n" +
	"\x1eDriverRespondToCounterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"=\n" +
	"\x1cGetNegotiationSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\x94\x01\n" +
	"\x1dGetNegotiationSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x127\n" +
	"\asession\x18\x02 \x01(\v2\x18.trip.NegotiationSessionH\x00R\asession\x88\x01\x01\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05errorB\n" +
	"\n" +
	"\b_session\"Q\n" +
	"\x18CancelNegotiationRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"K\n" +
	"\x19CancelNegotiationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error*^\n" +
	"\n" +
	"PriceModel\x12\x1b\n" +
	"\x17PRICE_MODEL_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eAUTOMATIC_FARE\x10\x01\x12\r\n" +
	"\tFLEX_FARE\x10\x02\x12\x10\n" +
	"\fINSTANT_FARE\x10\x03*\xa6\x01\n" +
	"\n" +
	"TripStatus\x12\x1b\n" +
	"\x17TRIP_STATUS_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tREQUESTED\x10\x01\x12\f\n" +
	"\bASSIGNED\x10\x02\x12\f\n" +
	"\bARRIVING\x10\x03\x12\x0e\n" +
	"\n" +
	"IN_TRANSIT\x10\x04\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x05\x12\r\n" +
	"\tCOMPLETED\x10\x06\x12\r\n" +
	"\tCANCELLED\x10\a\x12\n" +
	"\n" +
	"\x06FAILED\x10\b\x12\n" +
	"\n" +
	"\x06LOCKED\x10\t*y\n" +
	"\rPaymentStatus\x12\x17\n" +
	"\x13PAYMENT_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fPAYMENT_PENDING\x10\x01\x12\x10\n" +
	"\fPAYMENT_PAID\x10\x02\x12\x12\n" +
	"\x0ePAYMENT_FAILED\x10\x03\x12\x14\n" +
	"\x10PAYMENT_REFUNDED\x10\x04*\xdb\x01\n" +
	"\x11NegotiationStatus\x12\"\n" +
	"\x1eNEGOTIATION_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aNEGOTIATION_STATUS_OFFERED\x10\x01\x12 \n" +
	"\x1cNEGOTIATION_STATUS_COUNTERED\x10\x02\x12\x1e\n" +
	"\x1aNEGOTIATION_STATUS_PENDING\x10\x03\x12\x1f\n" +
	"\x1bNEGOTIATION_STATUS_ACCEPTED\x10\x04\x12\x1f\n" +
	"\x1bNEGOTIATION_STATUS_REJECTED\x10\x052\x94\n" +
	"\n" +
	"\vTripService\x125\n" +
	"\n" +
	"CreateTrip\x12\x11.trip.TripRequest\x1a\x12.trip.TripResponse\"\x00\x12G\n" +
	"\x10SubmitBidOrOffer\x12\x17.trip.BidOrOfferRequest\x1a\x18.trip.BidOrOfferResponse\"\x00\x12D\n" +
	"\vAcceptOffer\x12\x18.trip.AcceptOfferRequest\x1a\x19.trip.AcceptOfferResponse\"\x00\x12J\n" +
	"\rInstantAccept\x12\x1a.trip.InstantAcceptRequest\x1a\x1b.trip.InstantAcceptResponse\"\x00\x125\n" +
	"\aGetTrip\x12\x14.trip.GetTripRequest\x1a\x12.trip.TripResponse\"\x00\x12M\n" +
	"\x0eGetActiveTrips\x12\x1b.trip.GetActiveTripsRequest\x1a\x1c.trip.GetActiveTripsResponse\"\x00\x12[\n" +
	"\x15GetActiveTripsByRider\x12\".trip.GetActiveTripsByRiderRequest\x1a\x1c.trip.GetActiveTripsResponse\"\x00\x12A\n" +
	"\n" +
	"AcceptTrip\x12\x17.trip.AcceptTripRequest\x1a\x18.trip.AcceptTripResponse\"\x00\x12A\n" +
	"\n" +
	"CancelTrip\x12\x17.trip.CancelTripRequest\x1a\x18.trip.CancelTripResponse\"\x00\x12G\n" +
	"\fCompleteTrip\x12\x19.trip.CompleteTripRequest\x1a\x1a.trip.CompleteTripResponse\"\x00\x12V\n" +
	"\x11GetBiddingSession\x12\x1e.trip.GetBiddingSessionRequest\x1a\x1f.trip.GetBiddingSessionResponse\"\x00\x12n\n" +
	"\x19GetBiddingSessionsByRider\x12&.trip.GetBiddingSessionsByRiderRequest\x1a'.trip.GetBiddingSessionsByRiderResponse\"\x00\x12q\n" +
	"\x1aGetBiddingSessionsByDriver\x12'.trip.GetBiddingSessionsByDriverRequest\x1a(.trip.GetBiddingSessionsByDriverResponse\"\x00\x12G\n" +
	"\fInstantMatch\x12\x19.trip.InstantMatchRequest\x1a\x1a.trip.InstantMatchResponse\"\x00\x12b\n" +
	"\x15GetInstantMatchStatus\x12\".trip.GetInstantMatchStatusRequest\x1a#.trip.GetInstantMatchStatusResponse\"\x00\x12Y\n" +
	"\x12CancelInstantMatch\x12\x1f.trip.CancelInstantMatchRequest\x1a .trip.CancelInstantMatchResponse\"\x002\xb9\x04\n" +
	"\x12NegotiationService\x12k\n" +
	"\x18CreateNegotiationSession\x12%.trip.CreateNegotiationSessionRequest\x1a&.trip.CreateNegotiationSessionResponse\"\x00\x12D\n" +
	"\vSubmitOffer\x12\x18.trip.SubmitOfferRequest\x1a\x19.trip.SubmitOfferResponse\"\x00\x12M\n" +
	"\x0eRespondToOffer\x12\x1b.trip.RespondToOfferRequest\x1a\x1c.trip.RespondToOfferResponse\"\x00\x12e\n" +
	"\x16DriverRespondToCounter\x12#.trip.DriverRespondToCounterRequest\x1a$.trip.DriverRespondToCounterResponse\"\x00\x12b\n" +
	"\x15GetNegotiationSession\x12\".trip.GetNegotiationSessionRequest\x1a#.trip.GetNegotiationSessionResponse\"\x00\x12V\n" +
	"\x11CancelNegotiation\x12\x1e.trip.CancelNegotiationRequest\x1a\x1f.trip.CancelNegotiationResponse\"\x00B\x1bZ\x19common/genproto/trip;tripb\x06proto3"

var (
	file_trip_proto_rawDescOnce sync.Once
	file_trip_proto_rawDescData []byte
)

func file_trip_proto_rawDescGZIP() []byte {
	file_trip_proto_rawDescOnce.Do(func() {
		file_trip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trip_proto_rawDesc), len(file_trip_proto_rawDesc)))
	})
	return file_trip_proto_rawDescData
}

var file_trip_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_trip_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_trip_proto_goTypes = []any{
	(PriceModel)(0),                            // 0: trip.PriceModel
	(TripStatus)(0),                            // 1: trip.TripStatus
	(PaymentStatus)(0),                         // 2: trip.PaymentStatus
	(NegotiationStatus)(0),                     // 3: trip.NegotiationStatus
	(*Trip)(nil),                               // 4: trip.Trip
	(*TripRequest)(nil),                        // 5: trip.TripRequest
	(*TripResponse)(nil),                       // 6: trip.TripResponse
	(*BidOrOfferRequest)(nil),                  // 7: trip.BidOrOfferRequest
	(*BidOrOfferResponse)(nil),                 // 8: trip.BidOrOfferResponse
	(*AcceptOfferRequest)(nil),                 // 9: trip.AcceptOfferRequest
	(*AcceptOfferResponse)(nil),                // 10: trip.AcceptOfferResponse
	(*InstantAcceptRequest)(nil),               // 11: trip.InstantAcceptRequest
	(*InstantAcceptResponse)(nil),              // 12: trip.InstantAcceptResponse
	(*GetTripRequest)(nil),                     // 13: trip.GetTripRequest
	(*GetActiveTripsRequest)(nil),              // 14: trip.GetActiveTripsRequest
	(*GetActiveTripsByRiderRequest)(nil),       // 15: trip.GetActiveTripsByRiderRequest
	(*GetActiveTripsResponse)(nil),             // 16: trip.GetActiveTripsResponse
	(*AcceptTripRequest)(nil),                  // 17: trip.AcceptTripRequest
	(*AcceptTripResponse)(nil),                 // 18: trip.AcceptTripResponse
	(*CancelTripRequest)(nil),                  // 19: trip.CancelTripRequest
	(*CancelTripResponse)(nil),                 // 20: trip.CancelTripResponse
	(*CompleteTripRequest)(nil),                // 21: trip.CompleteTripRequest
	(*CompleteTripResponse)(nil),               // 22: trip.CompleteTripResponse
	(*BiddingSession)(nil),                     // 23: trip.BiddingSession
	(*GetBiddingSessionRequest)(nil),           // 24: trip.GetBiddingSessionRequest
	(*GetBiddingSessionResponse)(nil),          // 25: trip.GetBiddingSessionResponse
	(*GetBiddingSessionsByRiderRequest)(nil),   // 26: trip.GetBiddingSessionsByRiderRequest
	(*GetBiddingSessionsByRiderResponse)(nil),  // 27: trip.GetBiddingSessionsByRiderResponse
	(*GetBiddingSessionsByDriverRequest)(nil),  // 28: trip.GetBiddingSessionsByDriverRequest
	(*GetBiddingSessionsByDriverResponse)(nil), // 29: trip.GetBiddingSessionsByDriverResponse
	(*InstantMatchRequest)(nil),                // 30: trip.InstantMatchRequest
	(*InstantMatchResponse)(nil),               // 31: trip.InstantMatchResponse
	(*GetInstantMatchStatusRequest)(nil),       // 32: trip.GetInstantMatchStatusRequest
	(*GetInstantMatchStatusResponse)(nil),      // 33: trip.GetInstantMatchStatusResponse
	(*CancelInstantMatchRequest)(nil),          // 34: trip.CancelInstantMatchRequest
	(*CancelInstantMatchResponse)(nil),         // 35: trip.CancelInstantMatchResponse
	(*DriverInfo)(nil),                         // 36: trip.DriverInfo
	(*NegotiationSession)(nil),                 // 37: trip.NegotiationSession
	(*Offer)(nil),                              // 38: trip.Offer
	(*NegotiationRound)(nil),                   // 39: trip.NegotiationRound
	(*CreateNegotiationSessionRequest)(nil),    // 40: trip.CreateNegotiationSessionRequest
	(*CreateNegotiationSessionResponse)(nil),   // 41: trip.CreateNegotiationSessionResponse
	(*SubmitOfferRequest)(nil),                 // 42: trip.SubmitOfferRequest
	(*SubmitOfferResponse)(nil),                // 43: trip.SubmitOfferResponse
	(*RespondToOfferRequest)(nil),              // 44: trip.RespondToOfferRequest
	(*RespondToOfferResponse)(nil),             // 45: trip.RespondToOfferResponse
	(*DriverRespondToCounterRequest)(nil),      // 46: trip.DriverRespondToCounterRequest
	(*DriverRespondToCounterResponse)(nil),     // 47: trip.DriverRespondToCounterResponse
	(*GetNegotiationSessionRequest)(nil),       // 48: trip.GetNegotiationSessionRequest
	(*GetNegotiationSessionResponse)(nil),      // 49: trip.GetNegotiationSessionResponse
	(*CancelNegotiationRequest)(nil),           // 50: trip.CancelNegotiationRequest
	(*CancelNegotiationResponse)(nil),          // 51: trip.CancelNegotiationResponse
	nil,                                        // 52: trip.NegotiationSession.MetadataEntry
	nil,                                        // 53: trip.CreateNegotiationSessionRequest.MetadataEntry
}
var file_trip_proto_depIdxs = []int32{
	0,  // 0: trip.Trip.price_model:type_name -> trip.PriceModel
	1,  // 1: trip.Trip.status:type_name -> trip.TripStatus
	2,  // 2: trip.Trip.payment_status:type_name -> trip.PaymentStatus
	0,  // 3: trip.TripRequest.price_model:type_name -> trip.PriceModel
	1,  // 4: trip.TripRequest.status:type_name -> trip.TripStatus
	2,  // 5: trip.TripRequest.payment_status:type_name -> trip.PaymentStatus
	4,  // 6: trip.TripResponse.trip:type_name -> trip.Trip
	0,  // 7: trip.BidOrOfferRequest.price_model:type_name -> trip.PriceModel
	0,  // 8: trip.BidOrOfferResponse.price_model:type_name -> trip.PriceModel
	3,  // 9: trip.BidOrOfferResponse.negotiation_status:type_name -> trip.NegotiationStatus
	4,  // 10: trip.BidOrOfferResponse.trip:type_name -> trip.Trip
	0,  // 11: trip.AcceptOfferRequest.price_model:type_name -> trip.PriceModel
	4,  // 12: trip.AcceptOfferResponse.trip:type_name -> trip.Trip
	4,  // 13: trip.InstantAcceptResponse.trip:type_name -> trip.Trip
	4,  // 14: trip.GetActiveTripsResponse.trips:type_name -> trip.Trip
	4,  // 15: trip.AcceptTripResponse.trip:type_name -> trip.Trip
	4,  // 16: trip.CancelTripResponse.trip:type_name -> trip.Trip
	4,  // 17: trip.CompleteTripResponse.trip:type_name -> trip.Trip
	23, // 18: trip.GetBiddingSessionResponse.session:type_name -> trip.BiddingSession
	23, // 19: trip.GetBiddingSessionsByRiderResponse.sessions:type_name -> trip.BiddingSession
	23, // 20: trip.GetBiddingSessionsByDriverResponse.sessions:type_name -> trip.BiddingSession
	36, // 21: trip.GetInstantMatchStatusResponse.driver_info:type_name -> trip.DriverInfo
	38, // 22: trip.NegotiationSession.current_offers:type_name -> trip.Offer
	39, // 23: trip.NegotiationSession.negotiation_history:type_name -> trip.NegotiationRound
	52, // 24: trip.NegotiationSession.metadata:type_name -> trip.NegotiationSession.MetadataEntry
	53, // 25: trip.CreateNegotiationSessionRequest.metadata:type_name -> trip.CreateNegotiationSessionRequest.MetadataEntry
	37, // 26: trip.CreateNegotiationSessionResponse.session:type_name -> trip.NegotiationSession
	37, // 27: trip.GetNegotiationSessionResponse.session:type_name -> trip.NegotiationSession
	5,  // 28: trip.TripService.CreateTrip:input_type -> trip.TripRequest
	7,  // 29: trip.TripService.SubmitBidOrOffer:input_type -> trip.BidOrOfferRequest
	9,  // 30: trip.TripService.AcceptOffer:input_type -> trip.AcceptOfferRequest
	11, // 31: trip.TripService.InstantAccept:input_type -> trip.InstantAcceptRequest
	13, // 32: trip.TripService.GetTrip:input_type -> trip.GetTripRequest
	14, // 33: trip.TripService.GetActiveTrips:input_type -> trip.GetActiveTripsRequest
	15, // 34: trip.TripService.GetActiveTripsByRider:input_type -> trip.GetActiveTripsByRiderRequest
	17, // 35: trip.TripService.AcceptTrip:input_type -> trip.AcceptTripRequest
	19, // 36: trip.TripService.CancelTrip:input_type -> trip.CancelTripRequest
	21, // 37: trip.TripService.CompleteTrip:input_type -> trip.CompleteTripRequest
	24, // 38: trip.TripService.GetBiddingSession:input_type -> trip.GetBiddingSessionRequest
	26, // 39: trip.TripService.GetBiddingSessionsByRider:input_type -> trip.GetBiddingSessionsByRiderRequest
	28, // 40: trip.TripService.GetBiddingSessionsByDriver:input_type -> trip.GetBiddingSessionsByDriverRequest
	30, // 41: trip.TripService.InstantMatch:input_type -> trip.InstantMatchRequest
	32, // 42: trip.TripService.GetInstantMatchStatus:input_type -> trip.GetInstantMatchStatusRequest
	34, // 43: trip.TripService.CancelInstantMatch:input_type -> trip.CancelInstantMatchRequest
	40, // 44: trip.NegotiationService.CreateNegotiationSession:input_type -> trip.CreateNegotiationSessionRequest
	42, // 45: trip.NegotiationService.SubmitOffer:input_type -> trip.SubmitOfferRequest
	44, // 46: trip.NegotiationService.RespondToOffer:input_type -> trip.RespondToOfferRequest
	46, // 47: trip.NegotiationService.DriverRespondToCounter:input_type -> trip.DriverRespondToCounterRequest
	48, // 48: trip.NegotiationService.GetNegotiationSession:input_type -> trip.GetNegotiationSessionRequest
	50, // 49: trip.NegotiationService.CancelNegotiation:input_type -> trip.CancelNegotiationRequest
	6,  // 50: trip.TripService.CreateTrip:output_type -> trip.TripResponse
	8,  // 51: trip.TripService.SubmitBidOrOffer:output_type -> trip.BidOrOfferResponse
	10, // 52: trip.TripService.AcceptOffer:output_type -> trip.AcceptOfferResponse
	12, // 53: trip.TripService.InstantAccept:output_type -> trip.InstantAcceptResponse
	6,  // 54: trip.TripService.GetTrip:output_type -> trip.TripResponse
	16, // 55: trip.TripService.GetActiveTrips:output_type -> trip.GetActiveTripsResponse
	16, // 56: trip.TripService.GetActiveTripsByRider:output_type -> trip.GetActiveTripsResponse
	18, // 57: trip.TripService.AcceptTrip:output_type -> trip.AcceptTripResponse
	20, // 58: trip.TripService.CancelTrip:output_type -> trip.CancelTripResponse
	22, // 59: trip.TripService.CompleteTrip:output_type -> trip.CompleteTripResponse
	25, // 60: trip.TripService.GetBiddingSession:output_type -> trip.GetBiddingSessionResponse
	27, // 61: trip.TripService.GetBiddingSessionsByRider:output_type -> trip.GetBiddingSessionsByRiderResponse
	29, // 62: trip.TripService.GetBiddingSessionsByDriver:output_type -> trip.GetBiddingSessionsByDriverResponse
	31, // 63: trip.TripService.InstantMatch:output_type -> trip.InstantMatchResponse
	33, // 64: trip.TripService.GetInstantMatchStatus:output_type -> trip.GetInstantMatchStatusResponse
	35, // 65: trip.TripService.CancelInstantMatch:output_type -> trip.CancelInstantMatchResponse
	41, // 66: trip.NegotiationService.CreateNegotiationSession:output_type -> trip.CreateNegotiationSessionResponse
	43, // 67: trip.NegotiationService.SubmitOffer:output_type -> trip.SubmitOfferResponse
	45, // 68: trip.NegotiationService.RespondToOffer:output_type -> trip.RespondToOfferResponse
	47, // 69: trip.NegotiationService.DriverRespondToCounter:output_type -> trip.DriverRespondToCounterResponse
	49, // 70: trip.NegotiationService.GetNegotiationSession:output_type -> trip.GetNegotiationSessionResponse
	51, // 71: trip.NegotiationService.CancelNegotiation:output_type -> trip.CancelNegotiationResponse
	50, // [50:72] is the sub-list for method output_type
	28, // [28:50] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_trip_proto_init() }
func file_trip_proto_init() {
	if File_trip_proto != nil {
		return
	}
	file_trip_proto_msgTypes[0].OneofWrappers = []any{}
	file_trip_proto_msgTypes[8].OneofWrappers = []any{}
	file_trip_proto_msgTypes[19].OneofWrappers = []any{}
	file_trip_proto_msgTypes[33].OneofWrappers = []any{}
	file_trip_proto_msgTypes[34].OneofWrappers = []any{}
	file_trip_proto_msgTypes[35].OneofWrappers = []any{}
	file_trip_proto_msgTypes[36].OneofWrappers = []any{}
	file_trip_proto_msgTypes[37].OneofWrappers = []any{}
	file_trip_proto_msgTypes[40].OneofWrappers = []any{}
	file_trip_proto_msgTypes[42].OneofWrappers = []any{}
	file_trip_proto_msgTypes[45].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trip_proto_rawDesc), len(file_trip_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_trip_proto_goTypes,
		DependencyIndexes: file_trip_proto_depIdxs,
		EnumInfos:         file_trip_proto_enumTypes,
		MessageInfos:      file_trip_proto_msgTypes,
	}.Build()
	File_trip_proto = out.File
	file_trip_proto_goTypes = nil
	file_trip_proto_depIdxs = nil
}
