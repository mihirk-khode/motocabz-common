// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: driver.proto

package driver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Location update request
type UpdateLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // available, busy, offline
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLocationRequest) Reset() {
	*x = UpdateLocationRequest{}
	mi := &file_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationRequest) ProtoMessage() {}

func (x *UpdateLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocationRequest) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateLocationRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateLocationRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateLocationRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UpdateLocationRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Location update response
type UpdateLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLocationResponse) Reset() {
	*x = UpdateLocationResponse{}
	mi := &file_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationResponse) ProtoMessage() {}

func (x *UpdateLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateLocationResponse) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateLocationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateLocationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateLocationResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Driver status request
type GetDriverStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriverStatusRequest) Reset() {
	*x = GetDriverStatusRequest{}
	mi := &file_driver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriverStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverStatusRequest) ProtoMessage() {}

func (x *GetDriverStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverStatusRequest.ProtoReflect.Descriptor instead.
func (*GetDriverStatusRequest) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{2}
}

func (x *GetDriverStatusRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

// Driver status response
type GetDriverStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	IsAvailable   bool                   `protobuf:"varint,3,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	Latitude      float64                `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	LastSeen      string                 `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Message       string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriverStatusResponse) Reset() {
	*x = GetDriverStatusResponse{}
	mi := &file_driver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriverStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverStatusResponse) ProtoMessage() {}

func (x *GetDriverStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverStatusResponse.ProtoReflect.Descriptor instead.
func (*GetDriverStatusResponse) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{3}
}

func (x *GetDriverStatusResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *GetDriverStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDriverStatusResponse) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *GetDriverStatusResponse) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetDriverStatusResponse) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetDriverStatusResponse) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *GetDriverStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Real-time location update stream
type LocationUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationUpdate) Reset() {
	*x = LocationUpdate{}
	mi := &file_driver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdate) ProtoMessage() {}

func (x *LocationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdate.ProtoReflect.Descriptor instead.
func (*LocationUpdate) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{4}
}

func (x *LocationUpdate) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *LocationUpdate) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LocationUpdate) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LocationUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Location acknowledgment
type LocationAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationAck) Reset() {
	*x = LocationAck{}
	mi := &file_driver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationAck) ProtoMessage() {}

func (x *LocationAck) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationAck.ProtoReflect.Descriptor instead.
func (*LocationAck) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{5}
}

func (x *LocationAck) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *LocationAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LocationAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LocationAck) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Driver info request
type GetDriverInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriverInfoRequest) Reset() {
	*x = GetDriverInfoRequest{}
	mi := &file_driver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriverInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverInfoRequest) ProtoMessage() {}

func (x *GetDriverInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverInfoRequest.ProtoReflect.Descriptor instead.
func (*GetDriverInfoRequest) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{6}
}

func (x *GetDriverInfoRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

// Driver info response
type GetDriverInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Rating        float64                `protobuf:"fixed64,4,opt,name=rating,proto3" json:"rating,omitempty"`
	VehicleType   string                 `protobuf:"bytes,5,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	VehicleInfo   string                 `protobuf:"bytes,6,opt,name=vehicle_info,json=vehicleInfo,proto3" json:"vehicle_info,omitempty"`
	Latitude      float64                `protobuf:"fixed64,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,8,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Status        string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Eta           int32                  `protobuf:"varint,10,opt,name=eta,proto3" json:"eta,omitempty"`            // minutes
	Distance      float64                `protobuf:"fixed64,11,opt,name=distance,proto3" json:"distance,omitempty"` // km
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDriverInfoResponse) Reset() {
	*x = GetDriverInfoResponse{}
	mi := &file_driver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDriverInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverInfoResponse) ProtoMessage() {}

func (x *GetDriverInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverInfoResponse.ProtoReflect.Descriptor instead.
func (*GetDriverInfoResponse) Descriptor() ([]byte, []int) {
	return file_driver_proto_rawDescGZIP(), []int{7}
}

func (x *GetDriverInfoResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *GetDriverInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDriverInfoResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetDriverInfoResponse) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *GetDriverInfoResponse) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *GetDriverInfoResponse) GetVehicleInfo() string {
	if x != nil {
		return x.VehicleInfo
	}
	return ""
}

func (x *GetDriverInfoResponse) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetDriverInfoResponse) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetDriverInfoResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDriverInfoResponse) GetEta() int32 {
	if x != nil {
		return x.Eta
	}
	return 0
}

func (x *GetDriverInfoResponse) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

var File_driver_proto protoreflect.FileDescriptor

const file_driver_proto_rawDesc = "" +
	"\n" +
	"\fdriver.proto\x12\x06driver\"\x86\x01\n" +
	"\x15UpdateLocationRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"j\n" +
	"\x16UpdateLocationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"5\n" +
	"\x16GetDriverStatusRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\"\xe2\x01\n" +
	"\x17GetDriverStatusResponse\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12!\n" +
	"\fis_available\x18\x03 \x01(\bR\visAvailable\x12\x1a\n" +
	"\blatitude\x18\x04 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x05 \x01(\x01R\tlongitude\x12\x1b\n" +
	"\tlast_seen\x18\x06 \x01(\tR\blastSeen\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\"\x9d\x01\n" +
	"\x0eLocationUpdate\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"|\n" +
	"\vLocationAck\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"3\n" +
	"\x14GetDriverInfoRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\"\xbc\x02\n" +
	"\x15GetDriverInfoResponse\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\tR\bdriverId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05phone\x18\x03 \x01(\tR\x05phone\x12\x16\n" +
	"\x06rating\x18\x04 \x01(\x01R\x06rating\x12!\n" +
	"\fvehicle_type\x18\x05 \x01(\tR\vvehicleType\x12!\n" +
	"\fvehicle_info\x18\x06 \x01(\tR\vvehicleInfo\x12\x1a\n" +
	"\blatitude\x18\a \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\b \x01(\x01R\tlongitude\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12\x10\n" +
	"\x03eta\x18\n" +
	" \x01(\x05R\x03eta\x12\x1a\n" +
	"\bdistance\x18\v \x01(\x01R\bdistance2\xcd\x02\n" +
	"\rDriverService\x12Q\n" +
	"\x0eUpdateLocation\x12\x1d.driver.UpdateLocationRequest\x1a\x1e.driver.UpdateLocationResponse\"\x00\x12T\n" +
	"\x0fGetDriverStatus\x12\x1e.driver.GetDriverStatusRequest\x1a\x1f.driver.GetDriverStatusResponse\"\x00\x12C\n" +
	"\x0eStreamLocation\x12\x16.driver.LocationUpdate\x1a\x13.driver.LocationAck\"\x00(\x010\x01\x12N\n" +
	"\rGetDriverInfo\x12\x1c.driver.GetDriverInfoRequest\x1a\x1d.driver.GetDriverInfoResponse\"\x00B\x15Z\x13proto/driver;driverb\x06proto3"

var (
	file_driver_proto_rawDescOnce sync.Once
	file_driver_proto_rawDescData []byte
)

func file_driver_proto_rawDescGZIP() []byte {
	file_driver_proto_rawDescOnce.Do(func() {
		file_driver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_driver_proto_rawDesc), len(file_driver_proto_rawDesc)))
	})
	return file_driver_proto_rawDescData
}

var file_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_driver_proto_goTypes = []any{
	(*UpdateLocationRequest)(nil),   // 0: driver.UpdateLocationRequest
	(*UpdateLocationResponse)(nil),  // 1: driver.UpdateLocationResponse
	(*GetDriverStatusRequest)(nil),  // 2: driver.GetDriverStatusRequest
	(*GetDriverStatusResponse)(nil), // 3: driver.GetDriverStatusResponse
	(*LocationUpdate)(nil),          // 4: driver.LocationUpdate
	(*LocationAck)(nil),             // 5: driver.LocationAck
	(*GetDriverInfoRequest)(nil),    // 6: driver.GetDriverInfoRequest
	(*GetDriverInfoResponse)(nil),   // 7: driver.GetDriverInfoResponse
}
var file_driver_proto_depIdxs = []int32{
	0, // 0: driver.DriverService.UpdateLocation:input_type -> driver.UpdateLocationRequest
	2, // 1: driver.DriverService.GetDriverStatus:input_type -> driver.GetDriverStatusRequest
	4, // 2: driver.DriverService.StreamLocation:input_type -> driver.LocationUpdate
	6, // 3: driver.DriverService.GetDriverInfo:input_type -> driver.GetDriverInfoRequest
	1, // 4: driver.DriverService.UpdateLocation:output_type -> driver.UpdateLocationResponse
	3, // 5: driver.DriverService.GetDriverStatus:output_type -> driver.GetDriverStatusResponse
	5, // 6: driver.DriverService.StreamLocation:output_type -> driver.LocationAck
	7, // 7: driver.DriverService.GetDriverInfo:output_type -> driver.GetDriverInfoResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_driver_proto_init() }
func file_driver_proto_init() {
	if File_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_driver_proto_rawDesc), len(file_driver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_driver_proto_goTypes,
		DependencyIndexes: file_driver_proto_depIdxs,
		MessageInfos:      file_driver_proto_msgTypes,
	}.Build()
	File_driver_proto = out.File
	file_driver_proto_goTypes = nil
	file_driver_proto_depIdxs = nil
}
